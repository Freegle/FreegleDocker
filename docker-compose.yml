services:
  reverse-proxy:
    container_name: freegle-traefik
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.api.address=:8192"
      - "--accesslog=true"
      - "--entrypoints.web.forwardedHeaders.insecure=true"
    ports:
      - "80:80"
      - "8192:8192"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/dashboard/ || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  percona:
    container_name: freegle-percona
    image: percona:8.0.33-25-centos
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: iznik
      MYSQL_DATABASE: iznik
    healthcheck:
      test: ["CMD-SHELL", "mysql -h localhost -u root -piznik -e 'SELECT 1' || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 30s

  postgres:
    container_name: freegle-postgres
    image: postgis/postgis:13-3.1
    restart: always
    environment:
      POSTGRES_DB: iznik
      POSTGRES_PASSWORD: iznik
      POSTGRES_USER: root
    healthcheck:
      test: ["CMD-SHELL", "psql -h localhost -U root -d iznik -c 'SELECT 1' || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 30s

  phpmyadmin:
    container_name: freegle-phpmyadmin
    image: phpmyadmin
    depends_on:
      percona:
        condition: service_started
      reverse-proxy:
        condition: service_started
    restart: always
    environment:
      - PMA_HOST=percona
      - PMA_USER=root
      - PMA_PASSWORD=iznik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.localhost`)"
      - "traefik.http.routers.phpmyadmin.entrypoints=web"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"

  mailhog:
    image: mailhog/mailhog
    container_name: freegle-mailhog
    depends_on:
      percona:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      beanstalkd:
        condition: service_healthy
      spamassassin-app:
        condition: service_healthy
      reverse-proxy:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailhog.rule=Host(`mailhog.localhost`)"
      - "traefik.http.routers.mailhog.entrypoints=web"
      - "traefik.http.services.mailhog.loadbalancer.server.port=8025"

  beanstalkd:
    image: schickling/beanstalkd
    container_name: freegle-beanstalkd
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 11300 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  spamassassin-app:
    image: tiredofit/spamassassin
    container_name: freegle-spamassassin
    ports:
      - 783:783
    volumes:
      - ./logs/spamassassin:/logs
      - ./conf:/config
      - ./data:/data
    environment:
      - CONTAINER_NAME=spamassassin-app
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "nc -z 127.0.0.1 783"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  redis:
    container_name: freegle-redis
    image: redis:6.2-alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  tusd:
    image: tusproject/tusd:latest
    container_name: freegle-tusd
    ports:
      - "1080:8080"
    command: -hooks-http=http://freegle-apiv1:80/api/image -hooks-enabled-events=pre-create,post-finish -base-path=/tus/
    depends_on:
      reverse-proxy:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/tus/ 2>&1 | grep -E '(200|405)' || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 15s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tusd.rule=Host(`tusd.localhost`)"
      - "traefik.http.routers.tusd.entrypoints=web"
      - "traefik.http.services.tusd.loadbalancer.server.port=8080"

  status:
    build: ./status
    container_name: freegle-status
    ports:
      - "8081:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./status/index.html:/app/index.html:ro
      - ./status/logs.html:/app/logs.html:ro
      - ./status/server.js:/app/server.js:ro
      - ./ssl/certs:/app/ssl:ro
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.status.rule=Host(`status.localhost`)"
      - "traefik.http.routers.status.entrypoints=web"
      - "traefik.http.services.status.loadbalancer.server.port=80"

  # Freegle images.
  apiv1.localhost:
    container_name: freegle-apiv1
    build: ./iznik-server
    depends_on:
      percona:
        condition: service_started
      beanstalkd:
        condition: service_started
      mailhog:
        condition: service_started
      redis:
        condition: service_started
      spamassassin-app:
        condition: service_started
    restart: always
    environment:
      - MYSQL_HOST=percona
      - MYSQL_PORT=3306
      - MYSQL_PASSWORD=iznik
      - PHEANSTALK_SERVER=beanstalkd
      - REDIS_CONNECT=redis
      - IMAGE_DOMAIN=apiv1
      - SPAMD_HOST=spamassassin-app
      - SPAMD_PORT=783
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/api/config || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apiv1.rule=Host(`apiv1.localhost`)"
      - "traefik.http.routers.apiv1.entrypoints=web"
      - "traefik.http.routers.apiv1.middlewares=apiv1-cors"
      - "traefik.http.services.apiv1-localhost-freegledocker.loadbalancer.server.port=80"
      - "traefik.http.middlewares.limit.buffering.maxRequestBodyBytes=8000000"
      - "traefik.http.middlewares.apiv1-cors.headers.customresponseheaders.Access-Control-Allow-Origin=*"
      - "traefik.http.middlewares.apiv1-cors.headers.customresponseheaders.Access-Control-Allow-Methods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.apiv1-cors.headers.customresponseheaders.Access-Control-Allow-Headers=*"
      - "traefik.http.middlewares.apiv1-cors.headers.customresponseheaders.Access-Control-Max-Age=86400"
    secrets:
      - LOVE_JUNK_API
      - LOVE_JUNK_SECRET
      - PARTNER_KEY
      - PARTNER_NAME
      - IMAGE_DOMAIN
    ports:
      - "1023:22"
      - "83:80"

  apiv2.localhost:
    container_name: freegle-apiv2
    build: ./iznik-server-go
    depends_on:
      percona:
        condition: service_started
    restart: always
    environment:
      - MYSQL_HOST=percona
      - MYSQL_PORT=3306
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apiv2.rule=Host(`apiv2.localhost`)"
      - "traefik.http.routers.apiv2.entrypoints=api"
      - "traefik.http.services.apiv2.loadbalancer.server.port=8192"

  freegle:
    container_name: freegle-freegle
    build: ./iznik-nuxt3
    tmpfs:
      - /tmp
    depends_on:
      phpmyadmin:
        condition: service_started
      mailhog:
        condition: service_started
      apiv1.localhost:
        condition: service_started
      apiv2.localhost:
        condition: service_started
    restart: always
    environment:
      - IZNIK_API_V1=http://apiv1.localhost/api
      - IZNIK_API_V2=http://apiv2.localhost:8192/api
      - TUSD_URL=http://freegle-tusd:8080
      - NITRO_PRESET=node-server
      - NITRO_HTTPS=false
      - NUXT_NITRO_PRERENDER_ROUTES=false
      - NUXT_DEV_MODE=true
      - NUXT_SSR_LOG=false
      - NODE_ENV=development
      - NUXT_BUILD_MODE=development
      - HTTPS=false
      - SSL=false
      - NUXT_SECURITY_HTTPS_ENABLED=false
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.freegle.rule=Host(`freegle.localhost`)"
      - "traefik.http.routers.freegle.entrypoints=web"
      - "traefik.http.services.freegle.loadbalancer.server.port=3002"

  modtools:
    container_name: freegle-modtools
    build: 
      context: ./iznik-nuxt3-modtools
      dockerfile: modtools/Dockerfile
    tmpfs:
      - /tmp
    depends_on:
      phpmyadmin:
        condition: service_started
      mailhog:
        condition: service_started
      apiv1.localhost:
        condition: service_started
      apiv2.localhost:
        condition: service_started
    restart: always
    environment:
      - IZNIK_API_V1=http://apiv1.localhost/api
      - IZNIK_API_V2=http://apiv2.localhost:8192/api
      - TUSD_URL=http://freegle-tusd:8080
      - NITRO_PRESET=node-server
      - NITRO_HTTPS=false
      - NUXT_DEV_MODE=true
      - NUXT_SSR_LOG=false
      - NODE_ENV=development
      - NUXT_BUILD_MODE=development
      - HTTPS=false
      - SSL=false
      - NUXT_SECURITY_HTTPS_ENABLED=false
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.modtools.rule=Host(`modtools.localhost`)"
      - "traefik.http.routers.modtools.entrypoints=web"
      - "traefik.http.services.modtools.loadbalancer.server.port=3000"

networks:
  cont:
    driver:  bridge
    enable_ipv6: false

secrets:
  LOVE_JUNK_API:
    file: ./secrets/lovejunk-api.txt
  LOVE_JUNK_SECRET:
    file: ./secrets/lovejunk-secret.txt
  PARTNER_KEY:
    file: ./secrets/partner-key.txt
  PARTNER_NAME:
    file: ./secrets/partner-name.txt
  IMAGE_DOMAIN:
    file: ./secrets/image-domain.txt