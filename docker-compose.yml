services:
  # Init service to clone repositories
  git-clone:
    image: alpine/git
    volumes:
      - .:/workspace
    working_dir: /workspace
    entrypoint: /bin/sh
    command:
      - -c
      - |
        echo 'Checking and cloning repositories...'
        [ ! -d 'iznik-server' ] && git clone https://github.com/Freegle/iznik-server.git || echo 'iznik-server already exists'
        [ ! -d 'iznik-server-go' ] && git clone https://github.com/Freegle/iznik-server-go.git || echo 'iznik-server-go already exists'
        [ ! -d 'iznik-nuxt3' ] && git clone https://github.com/Freegle/iznik-nuxt3.git || echo 'iznik-nuxt3 already exists'
        [ ! -d 'iznik-nuxt' ] && git clone https://github.com/Freegle/iznik-nuxt.git || echo 'iznik-nuxt already exists'
        echo 'Repository setup complete'

  reverse-proxy:
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.api.address=:8192"
      - "--accesslog=true"
    ports:
      - "82:80"
      - "8192:8192"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  percona:
    image: percona:8.0.33-25-centos
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: iznik
      MYSQL_DATABASE: iznik

  postgres:
    image: postgis/postgis:13-3.1
    restart: always
    environment:
      POSTGRES_DB: iznik
      POSTGRES_PASSWORD: iznik
      POSTGRES_USER: root

  phpmyadmin:
    image: phpmyadmin
    depends_on:
      - percona
    restart: always
    environment:
      - PMA_HOST=percona
      - PMA_USER=root
      - PMA_PASSWORD=iznik
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.localhost`)"
    - "traefik.http.routers.phpmyadmin.entrypoints=web"

  mailhog:
    image: mailhog/mailhog
    container_name: 'mailhog'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailhog.rule=Host(`mailhog.localhost`)"
      - "traefik.http.routers.mailhog.entrypoints=web"
      - "traefik.http.services.mailhog.loadbalancer.server.port=8025"

  beanstalkd:
    image: schickling/beanstalkd
    container_name: 'beanstalkd'

#  Spam Assassin fails to start with rules issue.  No spam checking will occur until we fix this.
#
#  spamassassin-app:
#    image: tiredofit/spamassassin
#    container_name: spamassassin-app
#    ports:
#      - 783:783
#    volumes:
#      - ./logs/spamassassin:/logs
#      - ./conf:/config
#      - ./data:/data
#    environment:
#      - CONTAINER_NAME=spamassassin-app
#    restart: always

  redis:
    image: redis:6.2-alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning

  # Freegle images.
  apiv1.localhost:
    build: ./iznik-server
    depends_on:
      git-clone:
        condition: service_completed_successfully
      percona:
        condition: service_started
      beanstalkd:
        condition: service_started
      mailhog:
        condition: service_started
      redis:
        condition: service_started
    restart: always
    environment:
      - MYSQL_HOST=percona
      - MYSQL_PORT=3306
      - MYSQL_PASSWORD=iznik
      - PHEANSTALK_SERVER=beanstalkd
      - REDIS_CONNECT=redis
      - IMAGE_DOMAIN=apiv1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apiv1.rule=Host(`apiv1.localhost`)"
      - "traefik.http.routers.apiv1.entrypoints=web"
      - "traefik.http.middlewares.limit.buffering.maxRequestBodyBytes=8000000"
    secrets:
      - LOVE_JUNK_API
      - LOVE_JUNK_SECRET
      - PARTNER_KEY
      - PARTNER_NAME
      - IMAGE_DOMAIN
    ports:
      - "1023:22"
      - "83:80"

  apiv2.localhost:
    build: ./iznik-server-go
    depends_on:
      git-clone:
        condition: service_completed_successfully
      percona:
        condition: service_started
    restart: always
    environment:
      - MYSQL_HOST=percona
      - MYSQL_PORT=3306
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apiv2.rule=Host(`apiv2.localhost`)"
      - "traefik.http.routers.apiv2.entrypoints=api"
      - "traefik.http.services.apiv2.loadbalancer.server.port=8192"

  freegle:
    build: ./iznik-nuxt3
    depends_on:
      git-clone:
        condition: service_completed_successfully
      apiv1.localhost:
        condition: service_started
      apiv2.localhost:
        condition: service_started
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.freegle.rule=Host(`freegle.localhost`)"
      - "traefik.http.routers.freegle.entrypoints=web"
      - "traefik.http.services.freegle.loadbalancer.server.port=3002"

  modtools:
    build: ./iznik-nuxt
    depends_on:
      git-clone:
        condition: service_completed_successfully
      apiv1.localhost:
        condition: service_started
      apiv2.localhost:
        condition: service_started
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.modtools.rule=Host(`modtools.localhost`)"
      - "traefik.http.routers.modtools.entrypoints=web"
      - "traefik.http.services.modtools.loadbalancer.server.port=3000"

networks:
  cont:
    driver:  bridge
    enable_ipv6: false

secrets:
  LOVE_JUNK_API:
    file: ./secrets/lovejunk-api
  LOVE_JUNK_SECRET:
    file: ./secrets/lovejunk-secret
  PARTNER_KEY:
    file: ./secrets/partner-key
  PARTNER_NAME:
    file: ./secrets/partner-name
  IMAGE_DOMAIN:
    file: ./secrets/image-domain